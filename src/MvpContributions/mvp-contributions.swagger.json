{
  "swagger": "2.0",
  "info": {
    "title": "MVP Production",
    "version": "1.0"
  },
  "host": "mvpapi.azure-api.net",
  "basePath": "/mvp",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth2MSFT Live OAuth": {
      "type": "oauth2",
      "scopes": {
        "wl.emails wl.basic wl.offline_access wl.signin": ""
      },
      "flow": "accessCode",
      "authorizationUrl": "https://login.live.com/oauth20_authorize.srf",
      "tokenUrl": "https://login.live.com/oauth20_token.srf"
    }
  },
  "security": [
    {
      "oauth2MSFT Live OAuth": [
        "wl.emails wl.basic wl.offline_access wl.signin"
      ]
    }
  ],
  "parameters": {
    "apiKeyHeader": {
      "type": "string",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header",
      "default": "ae2edf7-YOURKEYHERE",
      "x-ms-visibility": "internal",
      "required": true
    }
  },
  "paths": {
    "/api/contributions/contributionareas": {
      "get": {
        "summary": "GetContributionAreas",
        "description": "Gets a list of Contribution areas grouped by Award Names",
        "operationId": "GetContributionAreas",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "IEnumerable ContributionAreaViewModel"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/contributions/contributiontypes": {
      "get": {
        "summary": "GetContributionTypes",
        "description": "Gets a list of Contribution Types",
        "operationId": "GetContributionTypes",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "IOrderedEnumerable object."
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/contributions/{offset}/{limit}": {
      "get": {
        "summary": "GetContributions",
        "description": "Supports pagination",
        "operationId": "GetContributions",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
            "name": "offset",
            "in": "path",
            "description": "Format - int32. Page skip integer",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "path",
            "description": "Format - int32. Page take integer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. ContributionViewModel object",
            "schema": {
              "$ref": "#/definitions/ContributionViewModel"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/contributions/{id}": {
      "get": {
        "summary": "GetContributionById",
        "description": "Gets a Contribution item by id",
        "operationId": "GetContributionById",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "id",
          "in": "path",
          "description": "Format - int32. ContributionId",
          "required": true,
          "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contribution object",
            "schema": {
              "$ref": "#/definitions/ContributionsModel"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/contributions": {
      "put": {
        "summary": "PutContribution",
        "description": "Updates a Contribution item",
        "operationId": "PutContribution",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "contributionsModel",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/ContributionsModel"
          },
          "description": "ContributionsModel object"
          }
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      },
      "post": {
        "summary": "PostContribution",
        "description": "Creates a new Contribution item",
        "operationId": "PostContribution",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
            "name": "contributionsModel",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ContributionsModel"
            },
            "description": "ContributionsModel object"
          }
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiContributionsPost200ApplicationJsonResponse"
            }
          },
          "201": {
            "description": "Newly created ContributionsModel item",
            "schema": {
              "$ref": "#/definitions/ContributionsModel"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      },
      "delete": {
        "summary": "DeleteContribution",
        "description": "Deletes a Contribution item",
        "operationId": "DeleteContribution",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "id",
          "in": "query",
          "description": "Format - int32. Contribution ID (model PrivateSiteId value)",
          "required": true,
          "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiContributionsDelete200ApplicationJsonResponse"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/onlineidentities": {
      "get": {
        "summary": "GetOnlineIdentities",
        "description": "Retricted to the current user",
        "operationId": "GetOnlineIdentities",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. IEnumberable object.",
            "schema": {
              "$ref": "#/definitions/OnlineIdentityViewModelArray"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      },
      "put": {
        "summary": "PutOnlineIdentity",
        "description": "Set PrivateSiteId in model to identity id",
        "operationId": "PutOnlineIdentity",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "onlineIdentityViewModel",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/OnlineIdentityViewModel"
          },
          "description": "OnlineIdentityViewModel model"
          }
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      },
      "post": {
        "summary": "PostOnlineIdentity",
        "description": "Keep PrivateSiteId == 0 and Retricted to the current user",
        "operationId": "PostOnlineIdentity",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "onlineIdentityViewModel",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/OnlineIdentityViewModel"
          },
          "description": "OnlineIdentityViewModel object"
          }
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiOnlineidentitiesPost200ApplicationJsonResponse"
            }
          },
          "201": {
            "description": "Newly created OnlineIdentity item",
            "schema": {
              "$ref": "#/definitions/OnlineIdentity"
            }
          },
          "500": {
            "description": "InternalServerError"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      },
      "delete": {
        "summary": "DeleteOnlineIdentity",
        "description": "Delete Online Identity",
        "operationId": "DeleteOnlineIdentity",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "id",
          "in": "query",
          "description": "Format - int32. The items identity id (PrivateSiteId)",
          "required": true,
          "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiOnlineidentitiesDelete200ApplicationJsonResponse"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/onlineidentities/{nominationsId}": {
      "get": {
        "summary": "GetOnlineIdentitiesByNominationsId",
        "description": "Retricted to the current user",
        "operationId": "GetOnlineIdentitiesByNominationsId",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "nominationsId",
          "in": "path",
          "description": "Format - uuid. Guid nominationsId",
          "required": true,
          "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. IEnumberable object.",
            "schema": {
              "$ref": "#/definitions/OnlineIdentityViewModelArray"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/onlineidentities/{id}": {
      "get": {
        "summary": "GetOnlineIdentityById",
        "description": "Retricted to the current user",
        "operationId": "GetOnlineIdentityById",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "id",
          "in": "path",
          "description": "Format - int32. id of item to be retrieved",
          "required": true,
          "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OnlineIdentity"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/profile": {
      "get": {
        "summary": "GetMVPProfile",
        "description": "Gets the current logged on user profile summary",
        "operationId": "GetMVPProfile",
        "x-ms-visibility": "important",
        "parameters": [
          {
          "$ref": "#/parameters/apiKeyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileViewModel"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/profile/{mvpid}": {
      "get": {
        "summary": "GetMVPProfileById",
        "description": "Gets a users public profile",
        "operationId": "GetMVPProfileById",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          },
          {
          "name": "mvpid",
          "in": "path",
          "description": "Users mvpid",
          "required": true,
          "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileViewModel"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/profile/photo": {
      "get": {
        "summary": "GetMVPProfileImage",
        "description": "Gets the MVP Profile Image",
        "operationId": "GetMVPProfileImage",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    },
    "/api/contributions/sharingpreferences": {
      "get": {
        "summary": "GetSharingPreferences",
        "description": "Gets a list of Sharing Preference / Visibility Types for Contributions",
        "operationId": "GetSharingPreferences",
        "parameters": [
          {
            "$ref": "#/parameters/apiKeyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. IEnumerable object.",
            "schema": {
              "$ref": "#/definitions/VisibilityViewModelArray"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ]
      }
    }
  },
  "definitions": {
    "VisibilityViewModel": {
      "description": "The visibility.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the id.",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "LocalizeKey": {
          "type": "string"
        }
      }
    },
    "ContributionTypeModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the localized name.",
          "type": "string"
        },
        "EnglishName": {
          "description": "Gets or sets the english name",
          "type": "string"
        }
      }
    },
    "ContributionViewModel": {
      "type": "object",
      "properties": {
        "Contributions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionsModel"
          }
        },
        "TotalContributions": {
          "format": "int32",
          "type": "integer"
        },
        "PagingIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContributionsModel": {
      "type": "object",
      "properties": {
        "ContributionId": {
          "format": "int32",
          "description": "Gets or sets the Contribution table id.",
          "type": "integer"
        },
        "ContributionTypeName": {
          "description": "Name of the contribution type",
          "type": "string"
        },
        "ContributionType": {
          "$ref": "#/definitions/ContributionTypeModel",
          "description": "Gets or sets the contribution type."
        },
        "ContributionTechnology": {
          "$ref": "#/definitions/ContributionTechnologyModel",
          "description": "Gets or sets the contribution technology."
        },
        "StartDate": {
          "format": "date-time",
          "description": "Gets or sets the start date.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "ReferenceUrl": {
          "description": "Gets or sets the url.",
          "type": "string"
        },
        "Visibility": {
          "$ref": "#/definitions/VisibilityViewModel",
          "description": "Gets or sets the visibility."
        },
        "AnnualQuantity": {
          "format": "int32",
          "description": "Gets or sets the annual quantity.",
          "type": "integer"
        },
        "SecondAnnualQuantity": {
          "format": "int32",
          "description": "Gets or sets the second annual quantity.",
          "type": "integer"
        },
        "AnnualReach": {
          "format": "int32",
          "description": "Gets or sets the reach score.",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        }
      }
    },
    "ContributionTechnologyModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "AwardName": {
          "type": "string"
        },
        "AwardCategory": {
          "description": "Property to hold the Award Category value",
          "type": "string"
        }
      }
    },
    "OnlineIdentityViewModel": {
      "required": [
        "SocialNetwork",
        "Url"
      ],
      "type": "object",
      "properties": {
        "PrivateSiteId": {
          "format": "int32",
          "type": "integer"
        },
        "SocialNetwork": {
          "$ref": "#/definitions/SocialNetworkViewModel"
        },
        "Url": {
          "maxLength": 490,
          "minLength": 0,
          "pattern": "^((https?|ftp):\\/\\/)?(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$",
          "type": "string"
        },
        "OnlineIdentityVisibility": {
          "$ref": "#/definitions/VisibilityViewModel"
        },
        "ContributionCollected": {
          "type": "boolean"
        },
        "DisplayName": {
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "UserId": {
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "MicrosoftAccount": {
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "PrivacyConsentStatus": {
          "type": "boolean"
        },
        "PrivacyConsentCheckStatus": {
          "type": "boolean"
        },
        "PrivacyConsentCheckDate": {
          "format": "date-time",
          "type": "string"
        },
        "PrivacyConsentUnCheckDate": {
          "format": "date-time",
          "type": "string"
        },
        "Submitted": {
          "type": "boolean"
        }
      }
    },
    "SocialNetworkViewModel": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IconUrl": {
          "type": "string"
        },
        "SystemCollectionEnabled": {
          "type": "boolean"
        }
      }
    },
    "OnlineIdentity": {
      "type": "object",
      "properties": {
        "OnlineIdentityId": {
          "format": "uuid",
          "type": "string"
        },
        "MvpGuid": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "PrivateSiteId": {
          "format": "int32",
          "type": "integer"
        },
        "OnlineIdentityVisibility": {
          "$ref": "#/definitions/SharingPreference"
        },
        "SocialNetwork": {
          "$ref": "#/definitions/SocialNetwork"
        },
        "Url": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "MicrosoftAccount": {
          "type": "string"
        },
        "ContributionCollected": {
          "type": "boolean"
        },
        "PrivacyConsentStatus": {
          "type": "boolean"
        },
        "Submitted": {
          "type": "boolean"
        }
      }
    },
    "SharingPreference": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "SocialNetwork": {
      "type": "object",
      "properties": {
        "SocialNetworkId": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "StatusCode": {
          "$ref": "#/definitions/SocialNetworkStatusCode"
        },
        "SystemCollectionEnabled": {
          "type": "boolean"
        }
      }
    },
    "SocialNetworkStatusCode": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "ProfileViewModel": {
      "type": "object",
      "properties": {
        "Metadata": {
          "$ref": "#/definitions/ContentMetadata"
        },
        "MvpId": {
          "type": "string"
        },
        "YearsAsMvp": {
          "format": "int32",
          "type": "integer"
        },
        "FirstAwardYear": {
          "type": "string"
        },
        "AwardCategoryDisplay": {
          "type": "string"
        },
        "TechnicalExpertise": {
          "type": "string"
        },
        "InTheSpotlight": {
          "type": "boolean"
        },
        "Headline": {
          "type": "string"
        },
        "Biography": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "PrimaryEmailAddress": {
          "type": "string"
        },
        "ShippingCountry": {
          "type": "string"
        },
        "ShippingStateCity": {
          "type": "string"
        },
        "Languages": {
          "type": "string"
        },
        "OnlineIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineIdentityViewModel"
          }
        },
        "Certifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificationViewModel"
          }
        },
        "Activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityViewModel"
          }
        },
        "CommunityAwards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwardRecognitionViewModel"
          }
        },
        "NewsHighlights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MvpHighlightViewModel"
          }
        },
        "UpcomingEvent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MvpHighlightViewModel"
          }
        }
      }
    },
    "ContentMetadata": {
      "type": "object",
      "properties": {
        "PageTitle": {
          "type": "string"
        },
        "TemplateName": {
          "type": "string"
        },
        "Keywords": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "CertificationViewModel": {
      "description": "The account certification view model for edit.",
      "type": "object",
      "properties": {
        "PrivateSiteId": {
          "format": "int32",
          "description": "Gets or sets the private site id.",
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the title.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "CertificationVisibility": {
          "$ref": "#/definitions/VisibilityViewModel",
          "description": "Gets or sets the certification visibility."
        }
      }
    },
    "ActivityViewModel": {
      "description": "The activity view model.\r\nNote:\r\nThe logic of acticity is a little complicate.\r\nWhile edit activity, the ActivityType should be non-editable;\r\nWhile add activity, the dispalyname of AnnualQuantity/SecondAnnualQuantity/ReachScore should change with ActivityType changing,\r\nand validation rule is different while ActivityType change.\r\nFollowing is the logic details.\r\n<remarks>\r\nBook (Author):\r\n    [msft_title: required, 'Title']\r\n    [msft_startdate: required,'Start Date']\r\n    [msft_annualquantity: required, 'Books']\r\nBook (Co-Author): same as Book (Author)\r\nConference (booth presenter):\r\n    [msft_title: required, 'Title']\r\n    [msft_startdate: required,'Start Date']\r\n    [msft_annualquantity: required, 'Conferences']\r\nConference (organizer): same as Conference (booth presenter)\r\nSpeaking (Conference):\r\n    [msft_title: required, 'Title']\r\n    [msft_startdate: required,'Start Date']\r\n    [msft_annualquantity: required, 'Talks']\r\nSpeaking (Local):Same as Speaking (Conference)\r\nSpeaking (User group):Same as Speaking (Conference)\r\nForum Moderator:\r\n    [msft_title: required, 'Title']\r\n    [msft_startdate: required,'Start Date']\r\n    [msft_annualquantity: required, 'Threads Moderated']\r\nForum Participation (Microsoft Forums):\r\n    [msft_title: recommend, 'Title']\r\n    [msft_startdate: required,'Start Date']\r\n    [msft_url: required, 'Url']\r\n    [msft_annualquantity: required, 'Answers']\r\nForum Participation (3rd Party forums):\r\n    [msft_title: recommend, 'Title']\r\n    [msft_startdate: required,'Start Date']\r\n    [msft_url: required, 'Url']\r\n    [msft_annualquantity: required, 'Answers']\r\n    [msft_secondannualquantity: required, 'Posts']\r\n</remarks>",
      "required": [
        "ActivityType",
        "ApplicableTechnology",
        "DateOfActivity",
        "TitleOfActivity"
      ],
      "type": "object",
      "properties": {
        "PrivateSiteId": {
          "format": "int32",
          "description": "Gets or sets the private site id.",
          "type": "integer"
        },
        "ActivityType": {
          "$ref": "#/definitions/ActivityTypeViewModel",
          "description": "Gets or sets the contribution type."
        },
        "ApplicableTechnology": {
          "$ref": "#/definitions/ActivityTechnologyViewModel",
          "description": "Gets or sets the contribution technology."
        },
        "DateOfActivity": {
          "format": "date-time",
          "description": "Gets or sets the start date.",
          "type": "string"
        },
        "DateOfActivityFormatted": {
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End Date for system auto contribution",
          "type": "string"
        },
        "EndDateFormatted": {
          "type": "string"
        },
        "TitleOfActivity": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "ReferenceUrl": {
          "description": "Gets or sets the url.",
          "pattern": "^((https?|ftp):\\/\\/)?(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$",
          "type": "string"
        },
        "ActivityVisibility": {
          "$ref": "#/definitions/VisibilityViewModel",
          "description": "Gets or sets the visibility."
        },
        "AnnualQuantity": {
          "format": "int32",
          "description": "Gets or sets the annual quantity.",
          "pattern": "^[0-9]*$",
          "type": "integer"
        },
        "SecondAnnualQuantity": {
          "format": "int32",
          "description": "Gets or sets the second annual quantity.",
          "pattern": "^[0-9]*$",
          "type": "integer"
        },
        "AnnualReach": {
          "format": "int32",
          "description": "Gets or sets the reach score.",
          "pattern": "^[0-9]*$",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "OnlineIdentity": {
          "$ref": "#/definitions/OnlineIdentityViewModel",
          "description": "Online identity by which this contribution was collected. Should be null if the contribution was not system collected"
        },
        "SocialNetwork": {
          "$ref": "#/definitions/SocialNetworkViewModel",
          "description": "Social network. Should be null or ignore for non system collected contribution"
        },
        "AllAnswersUrl": {
          "description": "AllAnswersUrl",
          "type": "string"
        },
        "AllPostsUrl": {
          "description": "AllAnswersUrl",
          "type": "string"
        },
        "IsSystemCollected": {
          "description": "If this contribution is system collected",
          "type": "boolean"
        },
        "IsBelongToLatestAwardCycle": {
          "description": "If this contribution belongs to latest award cycle.",
          "type": "boolean"
        },
        "DisplayMode": {
          "type": "string"
        },
        "ChartColumnIndexes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "DescriptionSummaryFormat": {
          "type": "string"
        },
        "DataTableTitle": {
          "type": "string"
        },
        "SubtitleHeader": {
          "type": "string"
        },
        "IsAllowEdit": {
          "type": "boolean"
        },
        "IsAllowDelete": {
          "type": "boolean"
        },
        "IsFromBookmarklet": {
          "description": "IsBookmarklet: If the call is initiated from bookmarklet",
          "type": "boolean"
        },
        "Submitted": {
          "type": "boolean"
        }
      }
    },
    "AwardRecognitionViewModel": {
      "required": [
        "Title",
        "DateEarned"
      ],
      "type": "object",
      "properties": {
        "PrivateSiteId": {
          "format": "int32",
          "type": "integer"
        },
        "Title": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "DateEarned": {
          "format": "date-time",
          "type": "string"
        },
        "ReferenceUrl": {
          "pattern": "^((https?|ftp):\\/\\/)?(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$",
          "type": "string"
        },
        "AwardRecognitionVisibility": {
          "$ref": "#/definitions/VisibilityViewModel"
        }
      }
    },
    "MvpHighlightViewModel": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "DateFormatted": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Language": {
          "type": "string"
        }
      }
    },
    "ActivityTypeViewModel": {
      "description": "The activity type.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "EnglishName": {
          "description": "Gets or sets the english name",
          "type": "string"
        }
      }
    },
    "ActivityTechnologyViewModel": {
      "description": "The activity technology model.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "AwardName": {
          "type": "string"
        },
        "AwardCategory": {
          "description": "Property to hold the Award Category value",
          "type": "string"
        },
        "Statuscode": {
          "format": "int32",
          "type": "integer"
        },
        "Active": {
          "type": "boolean"
        }
      }
    },
    "VisibilityViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VisibilityViewModel"
      }
    },
    "ContributionTypeModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ContributionTypeModel"
      }
    },
    "ApiContributionsPost200ApplicationJsonResponse": {
      "type": "object"
    },
    "ApiContributionsPost200TextJsonResponse": {
      "type": "object"
    },
    "ApiContributionsPost200ApplicationXmlResponse": {
      "type": "object"
    },
    "ApiContributionsPost200TextXmlResponse": {
      "type": "object"
    },
    "ApiContributionsDelete200ApplicationJsonResponse": {
      "type": "object"
    },
    "ApiContributionsDelete200TextJsonResponse": {
      "type": "object"
    },
    "ApiContributionsDelete200ApplicationXmlResponse": {
      "type": "object"
    },
    "ApiContributionsDelete200TextXmlResponse": {
      "type": "object"
    },
    "OnlineIdentityViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/OnlineIdentityViewModel"
      }
    },
    "ApiOnlineidentitiesPost200ApplicationJsonResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesPost200TextJsonResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesPost200ApplicationXmlResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesPost200TextXmlResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesDelete200ApplicationJsonResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesDelete200TextJsonResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesDelete200ApplicationXmlResponse": {
      "type": "object"
    },
    "ApiOnlineidentitiesDelete200TextXmlResponse": {
      "type": "object"
    }
  }
}
